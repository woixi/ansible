- name: Установка мониторинга на серверы
  hosts: servers
  become: yes
  tasks:

    - name: Обновление кеша пакетов и установка зависимостей
      apt:
        name:
          - curl
          - tar
          - docker.io
        state: present
        update_cache: yes

    - name: Проверка наличия Node Exporter
      stat:
        path: /usr/local/bin/node_exporter
      register: node_exporter_check

    - name: Скачивание и установка Node Exporter (если нет)
      ansible.builtin.unarchive:
        src: "https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz"
        dest: "/usr/local/bin/"
        remote_src: yes
        extra_opts: [--strip-components=1]
      when: not node_exporter_check.stat.exists

    - name: Создание systemd-юнита для Node Exporter
      copy:
        dest: "/etc/systemd/system/node_exporter.service"
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          After=network.target

          [Service]
          User=nobody
          ExecStart=/usr/local/bin/node_exporter
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify: Restart Node Exporter

    - name: Запуск Node Exporter (если не запущен)
      systemd:
        name: node_exporter
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Проверка версии cgroup (v1 или v2)
      shell: grep cgroup /proc/mounts | head -n 1
      register: cgroup_version
      changed_when: false

    - name: Определение версии cgroup
      set_fact:
        cgroup_v2: "{{ 'cgroup2' in cgroup_version.stdout }}"

    - name: Проверка, запущен ли cAdvisor
      shell: docker ps --format '{{ "{{.Names}}" }}' | grep cadvisor
      register: cadvisor_status
      changed_when: false
      ignore_errors: true

    - name: Запуск cAdvisor (если не запущен) для cgroup v1
      docker_container:
        name: cadvisor
        image: google/cadvisor:latest
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
        volumes:
          - "/:/rootfs:ro"
          - "/var/run:/var/run:rw"
          - "/sys:/sys:ro"
          - "/var/lib/docker/:/var/lib/docker:ro"
      when: not cgroup_v2 and cadvisor_status.rc != 0

    - name: Запуск cAdvisor (если не запущен) для cgroup v2
      docker_container:
        name: cadvisor
        image: gcr.io/cadvisor/cadvisor:latest
        state: started
        restart_policy: always
        privileged: yes
        devices:
          - "/dev/kmsg:/dev/kmsg"
        ports:
          - "8080:8080"
        volumes:
          - "/:/rootfs:ro"
          - "/var/run:/var/run:rw"
          - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
          - "/var/lib/docker/:/var/lib/docker:ro"
      when: cgroup_v2 and cadvisor_status.rc != 0

- name: Обновление конфигурации Prometheus
  hosts: localhost
  tasks:
    - name: Генерация нового prometheus.yml
      template:
        src: templates/prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
      notify: Restart Prometheus

  handlers:
    - name: Restart Prometheus
      systemd:
        name: prometheus
        state: restarted
